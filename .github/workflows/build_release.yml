name: Patch, Build and Release

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout репозитория
        uses: actions/checkout@v4

      - name: Установка Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          check-latest: true
          
      - name: Установка Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Получить информацию о последнем релизе
        id: get_latest_release
        shell: pwsh
        run: |
          $response = Invoke-RestMethod -Uri "https://api.github.com/repos/TheKing-OfTime/YandexMusicModClient/releases/latest"
          $version = $response.tag_name
          $releaseTitle = $response.name
          $releaseNotes = $response.body
          if ($releaseNotes -match "(?s)(.*?)[#]{1,3}\s*Установка.*") {
            $releaseNotes = $matches[1].Trim()
          }
          echo "version=$version" >> $env:GITHUB_OUTPUT
          echo "title=$releaseTitle" >> $env:GITHUB_OUTPUT
          echo "notes<<EOF" >> $env:GITHUB_OUTPUT
          echo "$releaseNotes" >> $env:GITHUB_OUTPUT
          echo "EOF" >> $env:GITHUB_OUTPUT
          echo "Последняя версия: $version"
          echo "Заголовок релиза: $releaseTitle"
          echo "Описание релиза: $releaseNotes"
          
      - name: Клонировать YandexMusicModClient
        run: git clone https://github.com/TheKing-OfTime/YandexMusicModClient.git
        
      - name: Патчинг
        shell: pwsh
        run: |
          bun start YandexMusicModClient/src
        
      - name: Установка зависимостей
        working-directory: YandexMusicModClient
        run: |
         bun install
         bun install -D vite

      - name: Установка зависимостей
        working-directory: YandexMusicModClient
        run: |
          npm install
          
        
      - name: сборка проекта
        working-directory: YandexMusicModClient
        run: node toolset.js build  -m

      - name: Запаковка в ZST архив
        shell: pwsh
        run: |
          $AsarPath = "YandexMusicModClient\builds\latest\app.asar"
          $ZstPath = ".\app.asar.zst"
          
          Copy-Item -Path $AsarPath -Destination ".\app.asar"
          
          if (!(Get-Command choco -ErrorAction SilentlyContinue)) {
            Set-ExecutionPolicy Bypass -Scope Process -Force
            [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
            iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
          }
          
          choco install zstandard --no-progress -y

          zstd.exe --ultra -22 -f ".\app.asar" -o $ZstPath

      - name: Архивация app.asar.unpacked
        shell: pwsh
        run: |
          $UnpackedPath = "YandexMusicModClient\builds\latest\resources\app.asar.unpacked"
          $ZipPath = ".\app.asar.unpacked.zip"
          
          Compress-Archive -Path $UnpackedPath -DestinationPath $ZipPath -Force

      - name: Создание релиза
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: "${{ steps.get_latest_release.outputs.title }}"
          tag_name: "mod-${{ steps.get_latest_release.outputs.version }}"
          body: |
            # Модифицированная сборка YandexMusicModClient с активированным плюсом
            
            Основано на версии [${{ steps.get_latest_release.outputs.title }}](https://github.com/TheKing-OfTime/YandexMusicModClient/releases/tag/${{ steps.get_latest_release.outputs.version }})
            
            ## Изменения из оригинального релиза:
            ${{ steps.get_latest_release.outputs.notes }}
            
          files: |
            app.asar.zst
            app.asar.unpacked.zip
          draft: false
          fail_on_unmatched_files: true
